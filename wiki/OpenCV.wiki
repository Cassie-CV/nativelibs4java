#summary Build instructions for OpenCV4Java
#labels NativeLib

<wiki:gadget url="http://jnaerator.googlecode.com/svn/wiki/adsense468x60.xml" border="0" width="468" height="60" />

= Introduction =

Quote from the [http://opencv.willowgarage.com/wiki/ OpenCV Wiki] : "_OpenCV (Open Source Computer Vision) is a library of programming functions mainly aimed at real time computer vision._"

= License = 

BSD-style : [http://opencvlibrary.svn.sourceforge.net/viewvc/opencvlibrary/trunk/opencv/doc/license.txt?view=markup OpenCV License]

= Downloads = 

Sources available from [http://sourceforge.net/projects/opencvlibrary/ OpenCV's SourceForge Project].

Java wrappers with self-extracting binaries for MacOSX and Windows 32bits : [http://nativelibs4java.googlecode.com/svn/trunk/libraries/OpenCV/OpenCV.jar OpenCV.jar]

= Building =

 * Download [http://sourceforge.net/projects/opencvlibrary/ OpenCV sources] and unzip / untar them
 * Put the following files in the top OpenCV directory :
    * [http://nativelibs4java.googlecode.com/svn/trunk/libraries/OpenCV/makeMacOSXFatBinaries.sh makeMacOSXFatBinaries.sh] (MacOSX only)
    * [http://nativelibs4java.googlecode.com/svn/trunk/libraries/OpenCV/config.jnaerator config.jnaerator]
 * Open a command-line shell and go to the top OpenCV directory
 * On MacOSX : {{{ sh makeMacOSXFatBinaries.sh }}} to create fat binaries of OpenCV
 * {{{ java -jar jnaerator.jar }}}

= Quickstart = 

Have a look at [https://jna.dev.java.net/ JNA's frontpage]

{{{
import cv.*; 
import cxcore.*; 
import highgui.*; 
import ml.*; 
import static cv.CvLibrary.*; 
import static  cxcore.CxcoreLibrary.*; 
import static  highgui.HighguiLibrary.*; 
import static  ml.MlLibrary*; 
import static opencv.OpenCV.*;

public class Test {
	public static void main(String[] args) {
		try {
			IplImage img = highgui.cvLoadImage(args[0], CV_LOAD_IMAGE_UNCHANGED);
			highgui.cvNamedWindow("Example1", CV_WINDOW_AUTOSIZE);
			highgui.cvShowImage("Example1", new CvArr(img));
			System.in.read();
			//HighguiLibrary.INSTANCE.cvWaitKey(0);
			cxcore.cvReleaseImage(new PointerByReference(img.getPointer(0)));
			highgui.cvDestroyWindow("Example1");
		} catch (Throwable th) {
			th.printStackTrace();
		}
	}
}
}}}