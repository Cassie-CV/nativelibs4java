#summary Java/Scala bindings for OpenCL (LGPL-licensed : commercial friendly)
#labels NativeLib
<wiki:toc max_depth="1" />

= Download / Try it ! =

<table cellpadding="15" border="1" width="80%">
<tr>
<td align="center"><font size="+2">[http://code.google.com/p/javacl JavaCL]<br/>(has its own sub-project)</font><br/><br/>(natural and powerful Object-Oriented API for high-performance computing)
</td><td align="center">
<font size="+2">[http://code.google.com/p/scalacl ScalaCL]</font><br/><br/>(OpenCL DSL : write parallel expressions as you breathe)
</td><td align="center">
<font size="+2">OpenCL4Java</font><br/><br/>(raw C-style bindings that power JavaCL)
</td>
</tr><tr>
<td align="center">
[http://code.google.com/p/javacl/downloads/list Download] |
[http://nativelibs4java.sourceforge.net/sites/opencl4java-parent/opencl4java-root/apidocs/ JavaDoc] |
[Maven] |
[http://code.google.com/p/javacl/wiki/FAQ FAQ]
<br/> <br/> 
<table width="90%">
<tr><td align="center">
[http://nativelibs4java.sourceforge.net/webstart/OpenCL/ParticlesDemo.jnlp http://nativelibs4java.googlecode.com/svn/wiki/JavaCLLemonParticles.PNG]
<br/>
[http://nativelibs4java.sourceforge.net/webstart/OpenCL/ParticlesDemo.jnlp Particles Demo]
</td><td align="center">
[http://nativelibs4java.sourceforge.net/webstart/OpenCL/HardwareReport.jnlp http://nativelibs4java.googlecode.com/svn/wiki/JavaCLHardwareReport.png]
<br/>
[http://nativelibs4java.sourceforge.net/webstart/OpenCL/HardwareReport.jnlp Hardware Report]
</td></tr>
</table>
</td><td align="center">
[http://nativelibs4java.sourceforge.net/maven/com/nativelibs4java/scalacl Download] |
[http://nativelibs4java.sourceforge.net/sites/scalacl/scaladocs ScalaDoc]
</td><td align="center">
[http://nativelibs4java.sourceforge.net/maven/com/nativelibs4java/opencl4java Download] |
[http://nativelibs4java.sourceforge.net/sites/opencl4java/apidocs JavaDoc]
</td>
</tr>
</table>

= What is JavaCL / ScalaCL / OpenCL4Java ? =

[http://www.khronos.org/opencl/ OpenCL] is the first open, royalty-free standard for cross-platform, parallel programming of modern processors and GPUs.

NativeLibs4Java provide three levels of Java bindings for OpenCL :
  * [http://code.google.com/p/javacl JavaCL (graduated to its own project)] : Object-Oriented wrappings that hide away the complexity of the OpenCL API and bring facilities in (array reduction support, OpenGL interop...)
  {{{
CLContext context = JavaCL.createBestContext();
CLProgram program = context.createProgram(myKernelSource).build();
CLKernel kernel = program.createKernel(
   	"myKernel", 
    	new float[] { u, v },
    	context.createIntBuffer(Usage.Input, inputBuffer, true),
    	context.createFloatBuffer(Usage.Output, resultsBuffer, false)
);
...
}}}
  [http://code.google.com/p/nativelibs4java/source/browse/trunk/libraries/OpenCL/JavaCL/src/test/java/com/nativelibs4java/opencl/OpenCL4JavaBasicTest.java See the complete example...]
  * [http://ochafik.free.fr/blog/?p=207 ScalaCL], which is a kind of "parallel expressions for dummies" in Scala
  {{{
class VectorAdd(i: Dim) extends Program(i) {
	val a = FloatsVar
	val b = FloatsVar
	var result = FloatsVar
	content = result := a + b
}
}}}
  [http://nativelibs4java.googlecode.com/svn/trunk/libraries/OpenCL/ScalaCL/src/main/scala/scalacl/ScalaCLTest.scala See the complete exemple...]
  * OpenCL4Java [http://nativelibs4java.googlecode.com/svn/trunk/libraries/OpenCL/target/site/apidocs/com/nativelibs4java/opencl/OpenCLLibrary.html C-style wrappings] auto-JNAerated by [http://jnaerator.googlecode.com/ JNAerator] (they use [http://jna.dev.java.net/ JNA] to make the glue with native code)
  {{{		
cl_device_id[] ids = new cl_device_id[nDevs];
OpenCLLibrary.INSTANCE.clGetDeviceIDs(null, CL_DEVICE_TYPE_GPU | CL_DEVICE_TYPE_CPU, nDevs, ids, pCount));
...
}}}

= Requirements =

Please read [http://code.google.com/p/javacl/wiki/HardwareRequirements JavaCL's hardware requirements page]

= Build it... =

Please read [http://code.google.com/p/javacl/wiki/Build builds instructions here].

[http://nativelibs4java.sourceforge.net/webstart/OpenCL/ParticlesDemo.jnlp http://nativelibs4java.googlecode.com/svn/wiki/JavaCLDemo.png]