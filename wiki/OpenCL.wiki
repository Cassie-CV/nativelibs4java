#summary Java bindings for OpenCL
#labels NativeLib

= Open Computing Language 4 Java ? =

Apart from [http://www.apple.com/fr/macosx/ MacOS X Snow Leopard] developer previews, [http://www.khronos.org/opencl/ OpenCL] implementations are not yet widely available as of this writing.

However, the Khronos Group makes the [http://www.khronos.org/registry/cl/  OpenCL specification and headers] available to the public, so it is trivial to create [http://jna.dev.java.net/ JNA] wrappings for OpenCL using [http://jnaerator.googlecode.com/ JNAerator].

*IMPORTANT NOTE ON PERFORMANCE* : 

OpenCL is a high-performance library and wrapping it with JNA could appear pointless, as it usually incurs very high overhead. However, since JNA 3.1.0, there is a very fast direct call feature that should allow more than decent performance. Moreover, as pointed out by a reader [http://ochafik.free.fr/blog/?p=128&cpage=1#comment-17058 on my blog], the performance hit of setting up a CL kernel should be extremely small compared to the computation amount taking place afterwards.

= Downloads =

Preliminary binary download : [http://nativelibs4java.googlecode.com/svn/trunk/libraries/OpenCL/OpenCL.jar OpenCL.jar] (contains Java sources, their compiled classes and the JNAerator runtime - including JNA).

= Building =

First get JNAerator :
{{{
wget http://ochafik.free.fr/Java/jnaerator.jar
}}}

Then download OpenCL's headers from the [http://www.khronos.org/registry/cl/ Khronos OpenCL API Registry].

Put cl.h, cl_gl.h and cl_platform.h in a subdirectory named CL.

Make sure you have the JDK installed ({{{ set JDK_HOME=c:\Program Files\Java\jdk1.6.0_12 }}} on Windows, for instance) or that [http://ochafik.free.fr/Java/libraries/ecj-3.5M6.jar eclipse's latest Java compiler] is in your classpath.

Run the following command on Unix :
{{{
$JDK_HOME/bin/java -jar jnaerator.jar CL/cl.h -library OpenCL -jar OpenCL.jar
}}}

Or this one on Windows :
{{{
"%JDK_HOME%\bin\java.exe" -jar jnaerator.jar CL/cl.h -library OpenCL -jar OpenCL.jar
}}}

You'll get a neat [http://nativelibs4java.googlecode.com/svn/trunk/libraries/OpenCL/OpenCL.jar OpenCL.jar library wrapper such as this one].

You can even generate [http://ochafik.free.fr/nativelibs4java/OpenCL/doc the Javadoc] :
{{{
java -jar jnaerator.jar CL/cl.h -library OpenCL
javadoc -classpath jnaerator.jar -d ../doc opencl/*.java -link https://jna.dev.java.net/javadoc opencl/*.java
}}}