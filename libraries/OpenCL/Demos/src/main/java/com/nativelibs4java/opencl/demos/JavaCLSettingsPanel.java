/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JavaCLSettingsPanel.java
 *
 * Created on 3 janv. 2010, 04:06:51
 */

package com.nativelibs4java.opencl.demos;

import com.nativelibs4java.opencl.CLDevice;
import com.nativelibs4java.opencl.CLPlatform;
import com.nativelibs4java.opencl.JavaCL;
import com.nativelibs4java.opencl.demos.hardware.HardwareReport;
import java.awt.Dimension;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.media.opengl.GLCapabilities;
import javax.media.opengl.GLCapabilitiesChooser;
import javax.media.opengl.GLProfile;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.border.Border;
import javax.swing.border.EtchedBorder;
import javax.swing.border.TitledBorder;

/**
 *
 * @author ochafik
 */
public class JavaCLSettingsPanel extends javax.swing.JPanel {

    public void removeOpenGLComponents() {
        configFromGLCheck.getParent().remove(configFromGLCheck);
        awtRenderingCheck.getParent().remove(awtRenderingCheck);
        invalidate();
    }
    
    /** Creates new form JavaCLSettingsPanel */
    public JavaCLSettingsPanel() {
        initComponents();

        Border border = UIManager.getBorder( "TitledBorder.aquaVariant" );
        if (border == null)
            border = new EtchedBorder();
        settingsPanel.setBorder(new TitledBorder(border, "OpenCL & OpenGL Settings"));
        simpleSettingsPanel.setBorder(new TitledBorder(border, "Settings Helper"));

        normalButtActionPerformed(null);
    }

    public List getPlatforms() {
        return Arrays.asList(JavaCL.listPlatforms());
    }

    public List getGLProfiles() {
        List list = new ArrayList();
        list.add(GLProfile.GL2);
        return list;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        settingsPanel = new javax.swing.JPanel();
        platformLab = new javax.swing.JLabel();
        platformCombo = new javax.swing.JComboBox();
        deviceLab = new javax.swing.JLabel();
        deviceCombo = new javax.swing.JComboBox();
        configFromGLCheck = new javax.swing.JCheckBox();
        awtRenderingCheck = new javax.swing.JCheckBox();
        detailsButt = new javax.swing.JButton();
        simpleSettingsPanel = new javax.swing.JPanel();
        fastestButt = new javax.swing.JButton();
        normalButt = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        safestButt = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        platformLab.setText("Platform");

        platformCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        platformCombo.setMinimumSize(new java.awt.Dimension(16, 27));

        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${platforms}");
        org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, platformCombo);
        bindingGroup.addBinding(jComboBoxBinding);

        platformCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                platformChanged(evt);
            }
        });
        platformCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                platformComboActionPerformed(evt);
            }
        });

        deviceLab.setText("Device");

        deviceCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        deviceCombo.setMinimumSize(new java.awt.Dimension(16, 27));

        configFromGLCheck.setText("Configure from OpenGL");
        configFromGLCheck.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                configFromGLChanged(evt);
            }
        });
        configFromGLCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                configFromGLCheckActionPerformed(evt);
            }
        });

        awtRenderingCheck.setSelected(true);
        awtRenderingCheck.setText("Direct OpenGL AWT Rendering");
        awtRenderingCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                awtRenderingCheckActionPerformed(evt);
            }
        });

        detailsButt.setText("Details");
        detailsButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detailsButtActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout settingsPanelLayout = new org.jdesktop.layout.GroupLayout(settingsPanel);
        settingsPanel.setLayout(settingsPanelLayout);
        settingsPanelLayout.setHorizontalGroup(
            settingsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(settingsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(settingsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(platformLab)
                    .add(deviceLab))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(settingsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(configFromGLCheck)
                    .add(awtRenderingCheck)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, settingsPanelLayout.createSequentialGroup()
                        .add(platformCombo, 0, 537, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(detailsButt))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, deviceCombo, 0, 615, Short.MAX_VALUE))
                .addContainerGap())
        );
        settingsPanelLayout.setVerticalGroup(
            settingsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, settingsPanelLayout.createSequentialGroup()
                .add(configFromGLCheck)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(settingsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(platformCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(platformLab)
                    .add(detailsButt))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(settingsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(deviceCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(deviceLab))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(awtRenderingCheck))
        );

        fastestButt.setText("Fastest");
        fastestButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fastestButtActionPerformed(evt);
            }
        });

        normalButt.setText("Normal");
        normalButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                normalButtActionPerformed(evt);
            }
        });

        jLabel3.setText("Usually the best compromise.");

        jLabel4.setText("Best performance, may be unstable.");

        safestButt.setText("Safest");
        safestButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                safestButtActionPerformed(evt);
            }
        });

        jLabel5.setText("Choose this if you've experienced crashes or black screens with the other modes");

        org.jdesktop.layout.GroupLayout simpleSettingsPanelLayout = new org.jdesktop.layout.GroupLayout(simpleSettingsPanel);
        simpleSettingsPanel.setLayout(simpleSettingsPanelLayout);
        simpleSettingsPanelLayout.setHorizontalGroup(
            simpleSettingsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(simpleSettingsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(simpleSettingsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, safestButt, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                    .add(fastestButt, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                    .add(normalButt, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(simpleSettingsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel3)
                    .add(jLabel5)
                    .add(jLabel4))
                .addContainerGap())
        );
        simpleSettingsPanelLayout.setVerticalGroup(
            simpleSettingsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(simpleSettingsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(simpleSettingsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(fastestButt, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jLabel4))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(simpleSettingsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(normalButt, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(simpleSettingsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(safestButt, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jLabel5)))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(settingsPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .add(simpleSettingsPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(12, 12, 12))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(settingsPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(simpleSettingsPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    private void configFromGLCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_configFromGLCheckActionPerformed
        
    }//GEN-LAST:event_configFromGLCheckActionPerformed

    private void awtRenderingCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_awtRenderingCheckActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_awtRenderingCheckActionPerformed

    private void platformComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_platformComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_platformComboActionPerformed

    private void platformChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_platformChanged
        CLPlatform platform = (CLPlatform)platformCombo.getSelectedItem();
        if (platform != null) {
            CLDevice[] devices = platform.listAllDevices(true);
            deviceCombo.setModel(new DefaultComboBoxModel(devices));
            select(platform.getBestDevice());
            
        }
    }//GEN-LAST:event_platformChanged


    private void fastestButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fastestButtActionPerformed
        selectBestDevice();
        awtRenderingCheck.setSelected(true);
        configFromGLCheck.setSelected(true);
    }//GEN-LAST:event_fastestButtActionPerformed

    private void normalButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_normalButtActionPerformed
        selectBestDevice();
        awtRenderingCheck.setSelected(true);
        configFromGLCheck.setSelected(false);
    }//GEN-LAST:event_normalButtActionPerformed

    private void safestButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_safestButtActionPerformed
        selectBestDevice();
        awtRenderingCheck.setSelected(false);
        configFromGLCheck.setSelected(false);
    }//GEN-LAST:event_safestButtActionPerformed

    private void configFromGLChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_configFromGLChanged
        platformCombo.setEnabled(!configFromGLCheck.isSelected());
        deviceCombo.setEnabled(!configFromGLCheck.isSelected());
        platformLab.setEnabled(!configFromGLCheck.isSelected());
        deviceLab.setEnabled(!configFromGLCheck.isSelected());
    }//GEN-LAST:event_configFromGLChanged

    private void detailsButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detailsButtActionPerformed
        CLPlatform platform = (CLPlatform)platformCombo.getSelectedItem();
        if (platform != null) {
            JComponent c = HardwareReport.getHardwareReportComponent(platform);
            c.setMaximumSize(new Dimension(600, 600));
            c.setPreferredSize(new Dimension(600, 600));
            JOptionPane.showMessageDialog(this, c, "HardwareReport for platform '" + platform.getName() + "'", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_detailsButtActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox awtRenderingCheck;
    private javax.swing.JCheckBox configFromGLCheck;
    private javax.swing.JButton detailsButt;
    private javax.swing.JComboBox deviceCombo;
    private javax.swing.JLabel deviceLab;
    private javax.swing.JButton fastestButt;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JButton normalButt;
    private javax.swing.JComboBox platformCombo;
    private javax.swing.JLabel platformLab;
    private javax.swing.JButton safestButt;
    private javax.swing.JPanel settingsPanel;
    private javax.swing.JPanel simpleSettingsPanel;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    private void select(CLDevice bestDevice) {

        for (int i = 0, len = deviceCombo.getModel().getSize(); i < len; i++) {
            CLDevice device = (CLDevice)deviceCombo.getModel().getElementAt(i);
            if (device.equals(bestDevice)) {
                deviceCombo.setSelectedItem(device);
                break;
            }
        }
    }

    private void selectBestDevice() {

        CLDevice device = JavaCL.getBestDevice();
        CLPlatform platform = device.getPlatform();
        platformCombo.setSelectedItem(platform);
        select(device);
    }

}
