package com.nativelibs4java.opencl.library;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a>, <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class cl_uchar4 extends com.ochafik.lang.jnaerator.runtime.Union<cl_uchar4, cl_uchar4.ByValue, cl_uchar4.ByReference> {
	/// C type : cl_uchar[4]
	public byte[] u8 = new byte[(4)];
	public cl_uchar4() {
		super();
	}
	/// @param u8 C type : cl_uchar[4]
	public cl_uchar4(byte u8[]) {
		super();
		if (u8.length != this.u8.length) 
			throw new java.lang.IllegalArgumentException("Wrong array size !");
		this.u8 = u8;
		setType(byte[].class);
	}
	protected ByReference newByReference() { return new ByReference(); }
	protected ByValue newByValue() { return new ByValue(); }
	protected cl_uchar4 newInstance() { return new cl_uchar4(); }
	public static cl_uchar4[] newArray(int arrayLength) {
		return com.ochafik.lang.jnaerator.runtime.Union.newArray(cl_uchar4.class, arrayLength);
	}
	public static class ByReference extends cl_uchar4 implements com.sun.jna.Structure.ByReference {}
	public static class ByValue extends cl_uchar4 implements com.sun.jna.Structure.ByValue {}
}
